{"version":3,"sources":["components/Header.js","components/Footer.js","components/views/Home.js","components/views/Portfolio.js","components/views/About.js","App.js","serviceWorker.js","index.js"],"names":["Header","to","Footer","Home","class","href","target","App","exact","path","component","Portfolio","About","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uNAIe,SAASA,IACpB,OACI,oCACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,cAAT,aACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,UCPG,SAASC,IAEpB,OACI,6BACI,mDCDG,SAASC,IACpB,OACI,6BACI,kBAACH,EAAD,MACA,4EACA,6BAAM,6BAAM,6BAAM,6BAAM,6BACxB,kBAACE,EAAD,OCNG,SAASC,IACpB,OACI,6BACI,kBAACH,EAAD,MAEA,yBAAKI,MAAM,mBACjB,4BACE,4BAAI,uBAAGC,KAAK,mDAAmDC,OAAO,UAAlE,cACJ,gCAAK,uBAAGD,KAAK,qDAAqDC,OAAO,UAApE,uBACL,4BAAI,uBAAGD,KAAK,kDAAkDC,OAAO,UAAjE,gBACJ,4BAAI,uBAAGD,KAAK,6CAA6CC,OAAO,UAA5D,0BACJ,4BAAI,uBAAGD,KAAK,iDAAiDC,OAAO,UAAhE,sCAAJ,IAAoH,uBAAGD,KAAK,iDAAiDC,OAAO,UAAhE,WACpH,4BAAI,uBAAGD,KAAK,kDAAkDC,OAAO,UAAjE,qBAAJ,IAAoG,uBAAGD,KAAK,kDAAkDC,OAAO,UAAjE,WACpG,4BAAI,uBAAGD,KAAK,4CAA4CC,OAAO,UAA3D,cAAJ,IAAuF,uBAAGD,KAAK,6CAA6CC,OAAO,UAA5D,WACvF,4BAAI,uBAAGD,KAAK,2CAA2CC,OAAO,UAA1D,aAAJ,IAAqF,uBAAGD,KAAK,oCAAoCC,OAAO,UAAnD,aAIjF,kBAACJ,EAAD,OClBG,SAASC,IACpB,OACI,6BACI,kBAACH,EAAD,MAEA,4BACI,4BAAI,uBAAGK,KAAK,yCAAyCC,OAAO,UAAxD,aACJ,4BAAI,uBAAGD,KAAK,+BAA+BC,OAAO,UAA9C,YAGR,kBAACJ,EAAD,OCIGK,MAZf,WACE,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,kBAAC,IAAD,CAAOM,KAAK,aAAaC,UAAWC,IACpC,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAWE,OCDpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7cedfedd.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\n \n\nexport default function Header() {\n    return (\n        <>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/portfolio\">Portfolio</Link>\n            <Link to=\"/about\">About</Link>\n        </>\n    )\n}","import React from 'react'\n\nexport default function Footer() {\n\n    return (\n        <div>\n            <footer>Copyright 2020</footer>\n        </div>\n    )\n}","import React from 'react'\n\nimport Header from '../Header'\nimport Footer from '../Footer'\n\nexport default function Home() {\n    return (\n        <div>\n            <Header />\n            <p>UCLA alum. (Almost) UCI coding bootcamp grad.</p>\n            <br /><br /><br /><br /><br />\n            <Footer />\n        </div>\n    )\n}","import React from 'react'\n\nimport Header from '../Header'\nimport Footer from '../Footer'\n\nexport default function Home() {\n    return (\n        <div>\n            <Header />\n            \n            <div class=\"portfolio-items\">\n      <ul>\n        <li><a href=\"https://github.com/evanyang1/evanyang1.github.io\" target=\"_blank\">Portfolio</a></li>\n        <li> <a href=\"https://evanyang1.github.io/js-password-generator/\" target=\"_blank\">Password Generator</a></li>\n        <li><a href=\"https://evanyang1.github.io/js-api-weather-app/\" target=\"_blank\">Weather App</a></li>\n        <li><a href=\"https://evanyang1.github.io/js-calculator/\" target=\"_blank\">JavaScript Calculator</a></li>\n        <li><a href=\"https://carlnaza.github.io/parseSuperchargers/\" target=\"_blank\">ParseSuperchargers (Group Project)</a> <a href=\"https://github.com/Carlnaza/parseSuperchargers\" target=\"_blank\">(Repo)</a></li>\n        <li><a href=\"https://limitless-badlands-54723.herokuapp.com/\" target=\"_blank\">Express Notetaker</a> <a href=\"https://github.com/evanyang1/notes-app-jsonfile\" target=\"_blank\">(Repo)</a></li>\n        <li><a href=\"https://young-forest-25942.herokuapp.com/\" target=\"_blank\">Burger App</a> <a href=\"https://github.com/evanyang1/burger-logger\" target=\"_blank\">(Repo)</a></li>\n        <li><a href=\"https://warm-stream-20124.herokuapp.com/\" target=\"_blank\">Fake Yelp</a> <a href=\"https://github.com/evanyang1/felp\" target=\"_blank\">(Repo)</a></li>\n      </ul>\n    </div>\n\n            <Footer />\n        </div>\n    )\n}","import React from 'react'\n\nimport Header from '../Header'\nimport Footer from '../Footer'\n\nexport default function Home() {\n    return (\n        <div>\n            <Header />\n            \n            <ul>\n                <li><a href=\"https://www.linkedin.com/in/evanjyang/\" target=\"_blank\">LinkedIn</a></li>\n                <li><a href=\"https://github.com/evanyang1\" target=\"_blank\">Github</a></li>\n            </ul>\n\n            <Footer />\n        </div>\n    )\n}","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Home from './components/views/Home'\nimport Portfolio from './components/views/Portfolio'\nimport About from './components/views/About'\n\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/portfolio\" component={Portfolio} />\n        <Route path=\"/about\" component={About} />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}